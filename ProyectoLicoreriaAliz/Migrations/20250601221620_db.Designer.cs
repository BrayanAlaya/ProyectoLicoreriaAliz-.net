// <auto-generated />
using System;
using Examen_T1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ProyectoLicoreriaAliz.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250601221620_db")]
    partial class db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Clients", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("nmr_document")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("type_document")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Detalle_entrada", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("entrada_producto_id")
                        .HasColumnType("int");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("entrada_producto_id");

                    b.HasIndex("product_id");

                    b.ToTable("Detalle_Entradas");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Entradas_productos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Productoid")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("provider_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Productoid");

                    b.HasIndex("provider_id");

                    b.ToTable("Entradas_Productos");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("price_buy")
                        .HasColumnType("decimal(6,2)");

                    b.Property<decimal>("price_sell")
                        .HasColumnType("decimal(6,2)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Provider", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("id");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Provider_detalle_producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("producto_id")
                        .HasColumnType("int");

                    b.Property<int>("provider_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("producto_id");

                    b.HasIndex("provider_id");

                    b.ToTable("Provider_Detalle_Producto");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Purchase", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("client_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("monto")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("refund_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("client_id");

                    b.HasIndex("refund_id");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Purchase_detail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int>("purchase_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.HasIndex("purchase_id");

                    b.ToTable("Purchase_Detail");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Refund", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("id");

                    b.ToTable("Refunds");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("role_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Detalle_entrada", b =>
                {
                    b.HasOne("ProyectoLicoreriaAliz.Models.Entradas_productos", "Entradas_productos")
                        .WithMany("Detalle_entradas")
                        .HasForeignKey("entrada_producto_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoLicoreriaAliz.Models.Producto", "Producto")
                        .WithMany("Detalle_Entradas")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entradas_productos");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Entradas_productos", b =>
                {
                    b.HasOne("ProyectoLicoreriaAliz.Models.Producto", null)
                        .WithMany("Entradas_productos")
                        .HasForeignKey("Productoid");

                    b.HasOne("ProyectoLicoreriaAliz.Models.Provider", "Provider")
                        .WithMany("Entradas_productos")
                        .HasForeignKey("provider_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Provider_detalle_producto", b =>
                {
                    b.HasOne("ProyectoLicoreriaAliz.Models.Producto", "Producto")
                        .WithMany("Provider_detalle_producto")
                        .HasForeignKey("producto_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoLicoreriaAliz.Models.Provider", "Provider")
                        .WithMany("Provider_detalle_producto")
                        .HasForeignKey("provider_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Purchase", b =>
                {
                    b.HasOne("ProyectoLicoreriaAliz.Models.Clients", "Clients")
                        .WithMany("Purchase")
                        .HasForeignKey("client_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoLicoreriaAliz.Models.Refund", "Refund")
                        .WithMany("Purchases")
                        .HasForeignKey("refund_id");

                    b.Navigation("Clients");

                    b.Navigation("Refund");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Purchase_detail", b =>
                {
                    b.HasOne("ProyectoLicoreriaAliz.Models.Producto", "Producto")
                        .WithMany("Purchase_detail")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoLicoreriaAliz.Models.Purchase", "Purchase")
                        .WithMany("Purchase_details")
                        .HasForeignKey("purchase_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Users", b =>
                {
                    b.HasOne("ProyectoLicoreriaAliz.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Clients", b =>
                {
                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Entradas_productos", b =>
                {
                    b.Navigation("Detalle_entradas");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Producto", b =>
                {
                    b.Navigation("Detalle_Entradas");

                    b.Navigation("Entradas_productos");

                    b.Navigation("Provider_detalle_producto");

                    b.Navigation("Purchase_detail");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Provider", b =>
                {
                    b.Navigation("Entradas_productos");

                    b.Navigation("Provider_detalle_producto");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Purchase", b =>
                {
                    b.Navigation("Purchase_details");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Refund", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("ProyectoLicoreriaAliz.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
